syntax = "proto2";
import "api.proto";

package douyin.extra.second;

message douyin_relation_action_request {
  required string token = 1; // 用户鉴权token
  required int64 to_user_id = 2; // 对方用户id
  required int32 action_type = 3; // 1-发送消息
  required string content = 4; // 消息内容
}



service MessageActionService {
  rpc CreateMessageActionResponse(douyin_relation_action_request) returns(douyin_relation_action_response) {
    option (api.post) = "/douyin/message/action/";
  }
}


message douyin_message_chat_request {
    required string token = 1; // 用户鉴权token
    required int64 to_user_id = 2; // 对方用户id
  }
  
  message douyin_message_chat_response {
    required int32 status_code = 1; // 状态码，0-成功，其他值-失败
    optional string status_msg = 2; // 返回状态描述
    repeated Message message_list = 3; // 消息列表
  }
  
  message Message {
    required int64 id = 1; // 消息id
    required int64 to_user_id = 2; // 该消息接收者的id
    required int64 from_user_id =3; // 该消息发送者的id
    required string content = 4; // 消息内容
    optional string create_time = 5; // 消息创建时间
  }
  
  service MessageChatService {
    rpc CreateMessageChatResponse(douyin_message_chat_request) returns(douyin_message_chat_response) {
      option (api.get) = "/douyin/message/chat/";
    }
  }
  
  message douyin_relation_action_response {
    required int32 status_code = 1; // 状态码，0-成功，其他值-失败
    optional string status_msg = 2; // 返回状态描述
  }
  
  service RelationActionService {
    rpc CreateRelationActionResponse(douyin_relation_action_request) returns(douyin_relation_action_response) {
      option (api.post) = "/douyin/relation/action/";
    }
  }

  message douyin_relation_follow_list_request {
    required int64 user_id = 1; // 用户id
    required string token = 2; // 用户鉴权token
  }
  
  message douyin_relation_follow_list_response {
    required int32 status_code = 1; // 状态码，0-成功，其他值-失败
    optional string status_msg = 2; // 返回状态描述
    repeated User user_list = 3; // 用户信息列表
  }
  
  message User {
    required int64 id = 1; // 用户id
    required string name = 2; // 用户名称
    optional int64 follow_count = 3; // 关注总数
    optional int64 follower_count = 4; // 粉丝总数
    required bool is_follow = 5; // true-已关注，false-未关注
  }
  
  service RelationFollowListService {
    rpc CreateRelationFollowListResponse(douyin_relation_follow_list_request) returns(douyin_relation_follow_list_response) {
      option (api.get) = "/douyin/relatioin/follow/list/";
    }
  }

  message douyin_relation_follower_list_request {
    required int64 user_id = 1; // 用户id
    required string token = 2; // 用户鉴权token
  }
  
  message douyin_relation_follower_list_response {
    required int32 status_code = 1; // 状态码，0-成功，其他值-失败
    optional string status_msg = 2; // 返回状态描述
    repeated User user_list = 3; // 用户列表
  }

  service RelationFollowerListService {
    rpc CreateRelationFollowerListResponse(douyin_relation_follower_list_request) returns(douyin_relation_follower_list_response) {
      option (api.get) = "/douyin/relatioin/follower/list/";
    }
  }

  message douyin_relation_friend_list_request {
    required int64 user_id = 1; // 用户id
    required string token = 2; // 用户鉴权token
  }
  
  message douyin_relation_friend_list_response {
    required int32 status_code = 1; // 状态码，0-成功，其他值-失败
    optional string status_msg = 2; // 返回状态描述
    repeated FriendUser user_list = 3; // 用户列表
  }
  

  message FriendUser {
    required int64 id = 1; // 用户id
    required string name = 2; // 用户名称
    optional int64 follow_count = 3; // 关注总数
    optional int64 follower_count = 4; // 粉丝总数
    required bool is_follow = 5; // true-已关注，false-未关注
    required string avatar = 6; // 用户头像Url
    optional string message = 7; // 和该好友的最新聊天消息
    required int64 msgType = 8; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
  }
  
  service RelationFriendListService {
    rpc CreateRelationFriendListResponse(douyin_relation_friend_list_request) returns(douyin_relation_friend_list_response) {
      option (api.get) = "/douyin/relatioin/friend/list/";
    }
  }
