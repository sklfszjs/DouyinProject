// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: second.proto

package douyin_extra_second

import (
	_ "github.com/cloudwego/biz/model/api"
)

type DouyinRelationActionResponse struct {

       StatusCode int32  `protobuf:"varint,1,req,name=status_code,json=statusCode" json:"status_code,required" form:"status_code,required" query:"status_code,required"` // 状态码，0-成功，其他值-失败
       StatusMsg  string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"`                        // 返回状态描述
}


type DouyinRelationActionRequest struct {

	Token      string `protobuf:"bytes,1,req,name=token" json:"token,required" form:"token,required" query:"token,required"`                                          // 用户鉴权token
	ToUserId   int64  `protobuf:"varint,2,req,name=to_user_id,json=toUserId" json:"to_user_id,required" form:"to_user_id,required" query:"to_user_id,required"`       // 对方用户id
	ActionType int32  `protobuf:"varint,3,req,name=action_type,json=actionType" json:"action_type,required" form:"action_type,required" query:"action_type,required"` // 1-发送消息
	Content    string `protobuf:"bytes,4,req,name=content" json:"content,required" form:"content,required" query:"content,required"`                                  // 消息内容
}



type DouyinMessageChatRequest struct {

	Token    string `protobuf:"bytes,1,req,name=token" json:"token,required" form:"token,required" query:"token,required"`                                    // 用户鉴权token
	ToUserId int64  `protobuf:"varint,2,req,name=to_user_id,json=toUserId" json:"to_user_id,required" form:"to_user_id,required" query:"to_user_id,required"` // 对方用户id
}


type DouyinMessageChatResponse struct {

	StatusCode  int32     `protobuf:"varint,1,req,name=status_code,json=statusCode" json:"status_code,required" form:"status_code,required" query:"status_code,required"` // 状态码，0-成功，其他值-失败
	StatusMsg   string    `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"`                        // 返回状态描述
	MessageList []*Message `protobuf:"bytes,3,rep,name=message_list,json=messageList" json:"message_list" form:"message_list" query:"message_list"`                        // 消息列表
}



type Message struct {

	Id         int64  `protobuf:"varint,1,req,name=id" json:"id,required" form:"id,required" query:"id,required"`                                                         // 消息id
	ToUserId   int64  `protobuf:"varint,2,req,name=to_user_id,json=toUserId" json:"to_user_id,required" form:"to_user_id,required" query:"to_user_id,required"`           // 该消息接收者的id
	FromUserId int64  `protobuf:"varint,3,req,name=from_user_id,json=fromUserId" json:"from_user_id,required" form:"from_user_id,required" query:"from_user_id,required"` // 该消息发送者的id
	Content    string `protobuf:"bytes,4,req,name=content" json:"content,required" form:"content,required" query:"content,required"`                                      // 消息内容
	CreateTime string `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty" form:"create_time" query:"create_time"`                       // 消息创建时间
}


type DouyinRelationFollowListRequest struct {

	UserId int64  `protobuf:"varint,1,req,name=user_id,json=userId" json:"user_id,required" form:"user_id,required" query:"user_id,required"` // 用户id
	Token  string `protobuf:"bytes,2,req,name=token" json:"token,required" form:"token,required" query:"token,required"`                      // 用户鉴权token
}


type DouyinRelationFollowListResponse struct {

	StatusCode int32  `protobuf:"varint,1,req,name=status_code,json=statusCode" json:"status_code,required" form:"status_code,required" query:"status_code,required"` // 状态码，0-成功，其他值-失败
	StatusMsg  string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"`                        // 返回状态描述
	UserList   []*User `protobuf:"bytes,3,rep,name=user_list,json=userList" json:"user_list" form:"user_list" query:"user_list"`                                       // 用户信息列表
}


type User struct {

	Id            int64  `protobuf:"varint,1,req,name=id" json:"id,required" form:"id,required" query:"id,required"`                                                   // 用户id
	Name          string `protobuf:"bytes,2,req,name=name" json:"name,required" form:"name,required" query:"name,required"`                                            // 用户名称
	FollowCount   int64  `protobuf:"varint,3,opt,name=follow_count,json=followCount" json:"follow_count,omitempty" form:"follow_count" query:"follow_count"`           // 关注总数
	FollowerCount int64  `protobuf:"varint,4,opt,name=follower_count,json=followerCount" json:"follower_count,omitempty" form:"follower_count" query:"follower_count"` // 粉丝总数
	IsFollow      bool   `protobuf:"varint,5,req,name=is_follow,json=isFollow" json:"is_follow,required" form:"is_follow,required" query:"is_follow,required"`         // true-已关注，false-未关注
}



type DouyinRelationFollowerListRequest struct {

	UserId int64  `protobuf:"varint,1,req,name=user_id,json=userId" json:"user_id,required" form:"user_id,required" query:"user_id,required"` // 用户id
	Token  string `protobuf:"bytes,2,req,name=token" json:"token,required" form:"token,required" query:"token,required"`                      // 用户鉴权token
}


type DouyinRelationFollowerListResponse struct {

	StatusCode int32  `protobuf:"varint,1,req,name=status_code,json=statusCode" json:"status_code,required" form:"status_code,required" query:"status_code,required"` // 状态码，0-成功，其他值-失败
	StatusMsg  string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"`                        // 返回状态描述
	UserList   []*User `protobuf:"bytes,3,rep,name=user_list,json=userList" json:"user_list" form:"user_list" query:"user_list"`                                       // 用户列表
}


type DouyinRelationFriendListRequest struct {

	UserId int64  `protobuf:"varint,1,req,name=user_id,json=userId" json:"user_id,required" form:"user_id,required" query:"user_id,required"` // 用户id
	Token  string `protobuf:"bytes,2,req,name=token" json:"token,required" form:"token,required" query:"token,required"`                      // 用户鉴权token
}


type DouyinRelationFriendListResponse struct {

	StatusCode int32        `protobuf:"varint,1,req,name=status_code,json=statusCode" json:"status_code,required" form:"status_code,required" query:"status_code,required"` // 状态码，0-成功，其他值-失败
	StatusMsg  string       `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"`                        // 返回状态描述
	UserList   []*FriendUser `protobuf:"bytes,3,rep,name=user_list,json=userList" json:"user_list" form:"user_list" query:"user_list"`                                       // 用户列表
}

type FriendUser struct {

	Id            int64  `protobuf:"varint,1,req,name=id" json:"id,required" form:"id,required" query:"id,required"`                                                   // 用户id
	Name          string `protobuf:"bytes,2,req,name=name" json:"name,required" form:"name,required" query:"name,required"`                                            // 用户名称
	FollowCount   int64  `protobuf:"varint,3,opt,name=follow_count,json=followCount" json:"follow_count,omitempty" form:"follow_count" query:"follow_count"`           // 关注总数
	FollowerCount int64  `protobuf:"varint,4,opt,name=follower_count,json=followerCount" json:"follower_count,omitempty" form:"follower_count" query:"follower_count"` // 粉丝总数
	IsFollow      bool   `protobuf:"varint,5,req,name=is_follow,json=isFollow" json:"is_follow,required" form:"is_follow,required" query:"is_follow,required"`         // true-已关注，false-未关注
	Avatar        string `protobuf:"bytes,6,req,name=avatar" json:"avatar,required" form:"avatar,required" query:"avatar,required"`                                    // 用户头像Url
	Message       string `protobuf:"bytes,7,opt,name=message" json:"message,omitempty" form:"message" query:"message"`                                                 // 和该好友的最新聊天消息
	MsgType       int64  `protobuf:"varint,8,req,name=msgType" json:"msgType,required" form:"msgType,required" query:"msgType,required"`                               // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
}
