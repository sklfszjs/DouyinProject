// Code generated by hertz generator.

package douyin_core

import (
	"context"

	"fmt"

	"github.com/cloudwego/biz/utils"

	douyin_core "github.com/cloudwego/biz/model/douyin_core"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CreateUserResponse .
// @router /douyin/user/ [GET]
func CreateUserResponse(ctx context.Context, c *app.RequestContext) {
	var err error
	var req douyin_core.DouyinUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := UserService(req)

	c.JSON(consts.StatusOK, resp)
}

func UserService(req douyin_core.DouyinUserRequest) douyin_core.DouyinUserResponse {
	db := utils.GetDBConnPool().GetConn()
	defer utils.GetDBConnPool().ReturnConn(db)

	userID := req.UserId
	token := req.Token
	fmt.Println(userID, token)
	users := make([]*douyin_core.User, 0)
	tx := db.Begin()

	result := tx.Where("id = ? and token = ?", userID, token).Find(&users)
	if result.RowsAffected == 1 {
		fmt.Println("legal user")
		tx.Commit()
		// users[0].Is_follow = true

		return douyin_core.DouyinUserResponse{
			StatusCode: 0,
			StatusMsg:  "welcome, " + users[0].Name,
			User:       users[0],
		}
	} else {
		tx.Rollback()
		fmt.Println("illegal user")
		return douyin_core.DouyinUserResponse{
			StatusCode: 1,
			StatusMsg:  "illegal user",
		}
	}

}
